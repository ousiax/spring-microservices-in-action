server.port=8083

example.property=I AM THE DEFAULT

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
        
logging.level.com.optimagrowth.license=debug
server.error.include-stacktrace=ON_PARAM

management.endpoints.web.base-path=/
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.db.enabled=false
management.health.diskspace.enabled=true
management.endpoint.env.enabled=true
management.endpoint.env.show-values=ALWAYS
management.endpoints.web.exposure.include=*

management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true

eureka.instance.preferIpAddress=true
# eureka.client.registerWithEureka=true
# eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka/

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/spmia-realm
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/spmia-realm/protocol/openid-connect/certs

resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.ratelimiter.configs.instances.register-health-indicator=true

resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration=10ms
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCalls=20
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.keepAliveDuration=20ms

resilience4j.retry.instances.retryLicenseService.max-attempts=5
resilience4j.retry.instances.retryLicenseService.waitDuration=10000
resilience4j.retry.instances.retryLicenseService.retry-exceptions=java.util.concurrent.TimeoutException

resilience4j.ratelimiter.instances.licenseService.timeoutDuration=1000ms
resilience4j.ratelimiter.instances.licenseService.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.licenseService.limitForPeriod=5

spring.cloud.function.definition=inboundOrgChanges
spring.cloud.stream.bindings.inboundOrgChanges-in-0.group=licensingGroup
spring.cloud.stream.bindings.inboundOrgChanges-in-0.destination=orgChangeTopic
spring.cloud.stream.bindings.inboundOrgChanges-in-0.content-type=application/json
# https://www.confluent.io/blog/kafka-listeners-explained/
spring.cloud.stream.kafka.binder.brokers=node-0:9092

spring.data.redis.port=6379
spring.data.redis.password=""
spring.data.redis.host=redis